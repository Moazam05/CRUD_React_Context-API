{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","About","NotFound","Test","title","fetch","then","response","json","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,2BACFF,GADL,IAEEG,SAAUH,EAAMG,SAASC,QACvB,SAACC,GAAD,OAAaA,EAAQC,KAAOL,EAAOM,aAIzC,IAAK,cACH,OAAO,2BACFP,GADL,IAEEG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAGxC,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEG,SAAUH,EAAMG,SAASK,KAAI,SAACH,GAAD,OAC3BA,EAAQC,KAAOL,EAAOM,QAAQD,GACzBD,EAAUJ,EAAOM,QAClBF,OAIV,QACE,OAAOL,IAIAS,EAAb,4MACET,MAAQ,CACNG,SAAU,GAoBVO,SAAU,SAACT,GAAD,OAAY,EAAKU,UAAS,SAACX,GAAD,OAAWD,EAAQC,EAAOC,QAtBlE,kMA0BsBW,IAAMC,IAAI,8CA1BhC,OA0BUC,EA1BV,OA4BIC,KAAKJ,SAAS,CAAER,SAAUW,EAAIE,OA5BlC,qIAgCI,OACE,cAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,MAA9B,SACGe,KAAKG,MAAMC,eAlCpB,GAA8BC,aAwCjBC,EAAWzB,EAAQyB,SCGjBC,E,4MAvEbtB,MAAQ,CACNuB,iBAAiB,G,EAGnBC,c,uCAAgB,WAAOlB,EAAII,GAAX,SAAAe,EAAA,+EAENb,IAAMc,OAAN,qDAA2DpB,IAFrD,OAIZI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IAJhC,+CAMZI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IANhC,wD,+GAUN,IAAD,SAC4BS,KAAKG,MAAMb,QAAtCC,EADD,EACCA,GAAIqB,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MACjBN,EAAoBR,KAAKf,MAAzBuB,gBACR,OACE,cAACF,EAAD,UACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,mCACE,sBAAKoB,UAAU,sBAAf,UACE,+BACGH,EAAM,IACP,mBACEI,QAAS,kBACP,EAAKpB,SAAS,CACZY,iBAAkB,EAAKvB,MAAMuB,mBAGjCO,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnB,mBACEH,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAAS,EAAKP,cAAcY,KAAK,EAAM9B,EAAII,KAE7C,cAAC,IAAD,CAAM2B,GAAE,uBAAkB/B,GAA1B,SACE,mBACEwB,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRE,MAAO,QACPD,MAAO,QACPI,YAAa,eAKpBf,EACC,qBAAIO,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,qBAAyCF,KACzC,qBAAIE,UAAU,kBAAd,qBAAyCD,QAEzC,iB,GA1DET,aCoBPmB,E,uKApBX,OACE,cAAClB,EAAD,UACG,SAACJ,GAAW,IACHd,EAAac,EAAbd,SACR,OACE,qCACE,qBAAI2B,UAAU,iBAAd,UACE,sBAAMA,UAAU,cAAhB,qBADF,WAGC3B,EAASK,KAAI,SAACH,GAAD,OACZ,cAAC,EAAD,CAASA,QAASA,GAAcA,EAAQC,iB,GAZjCc,aCDjBoB,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,mCACE,qBAAKX,UAAU,0DAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,eAAvB,SACGW,IAEH,8BACE,qBAAIX,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,WAAvB,UACE,mBAAGA,UAAU,gBADf,aAKF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMO,GAAG,eAAeP,UAAU,WAAlC,UACE,mBAAGA,UAAU,gBADf,YAKF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,WAA5B,UACE,mBAAGA,UAAU,oBADf,2BAYhBU,EAAOE,aAAe,CACpBD,SAAU,UAOGD,Q,yBC3CTG,EAAiB,SAAC,GAQjB,IAPLC,EAOI,EAPJA,MACAjB,EAMI,EANJA,KACAV,EAKI,EALJA,MACA4B,EAII,EAJJA,YACA3C,EAGI,EAHJA,KACA4C,EAEI,EAFJA,SACAC,EACI,EADJA,MAEA,OACE,mCACE,sBAAKjB,UAAU,aAAf,UACE,uBAAOkB,QAASrB,EAAhB,SAAuBiB,IACvB,uBACE1C,KAAMA,EACNyB,KAAMA,EACNG,UAAWmB,IAAW,+BAAgC,CACpD,aAAcF,IAEhBF,YAAaA,EACb5B,MAAOA,EACP6B,SAAUA,IAGXC,GAAS,qBAAKjB,UAAU,mBAAf,SAAmCiB,UAgBrDJ,EAAeD,aAAe,CAC5BxC,KAAM,QAGOyC,QC4EAO,E,4MArHblD,MAAQ,CACN2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,I,EAGVL,SAAW,SAACM,GAAD,OAAO,EAAKzC,SAAL,eAAiByC,EAAEC,OAAO1B,KAAOyB,EAAEC,OAAOpC,S,EAE5DqC,S,uCAAW,WAAO5C,EAAU0C,GAAjB,yBAAA3B,EAAA,yDACT2B,EAAEG,iBADO,EAGsB,EAAKvD,MAA5B2B,EAHC,EAGDA,KAAMC,EAHL,EAGKA,MAAOC,EAHZ,EAGYA,MAGR,KAATF,EANK,uBAOP,EAAKhB,SAAS,CACZwC,OAAQ,CAAExB,KAAM,sBARX,6BAaK,KAAVC,EAbK,uBAcP,EAAKjB,SAAS,CACZwC,OAAQ,CAAEvB,MAAO,uBAfZ,6BAoBK,KAAVC,EApBK,wBAqBP,EAAKlB,SAAS,CACZwC,OAAQ,CAAEtB,MAAO,uBAtBZ,kCA2BH2B,EAAa,CACjB7B,OACAC,QACAC,SA9BO,UAiCSjB,IAAM6C,KACtB,6CACAD,GAnCO,QAiCH1C,EAjCG,OAsCTJ,EAAS,CAAER,KAAM,cAAeK,QAASO,EAAIE,OAG7C,EAAKL,SAAS,CACZgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,KAGV,EAAKjC,MAAMwC,QAAQC,KAAK,KAhDf,4C,+GAmDD,IAAD,SACgC5C,KAAKf,MAApC2B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAOsB,EADrB,EACqBA,OAE5B,OACE,cAAC9B,EAAD,UACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,mCACE,sBAAKoB,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,yBACA,qBAAKA,UAAU,YAAf,SACE,uBAAMwB,SAAU,EAAKA,SAASlB,KAAK,EAAM1B,GAAzC,UACE,cAAC,EAAD,CACEkC,MAAM,OACNjB,KAAK,OACLkB,YAAY,gBACZ5B,MAAOU,EACPmB,SAAU,EAAKA,SACfC,MAAOI,EAAOxB,OAGhB,cAAC,EAAD,CACEiB,MAAM,QACNjB,KAAK,QACLzB,KAAK,QACL2C,YAAY,iBACZ5B,MAAOW,EACPkB,SAAU,EAAKA,SACfC,MAAOI,EAAOvB,QAGhB,cAAC,EAAD,CACEgB,MAAM,QACNjB,KAAK,QACLkB,YAAY,iBACZ5B,MAAOY,EACPiB,SAAU,EAAKA,SACfC,MAAOI,EAAOtB,QAGhB,uBACE3B,KAAK,SACLe,MAAM,cACNa,UAAU,6C,GAzGPV,aCoJVwC,E,4MAnJb5D,MAAQ,CACN2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,I,EAkBVL,SAAW,SAACM,GAAD,OAAO,EAAKzC,SAAL,eAAiByC,EAAEC,OAAO1B,KAAOyB,EAAEC,OAAOpC,S,EAE5DqC,S,uCAAW,WAAO5C,EAAU0C,GAAjB,2BAAA3B,EAAA,yDACT2B,EAAEG,iBADO,EAGsB,EAAKvD,MAA5B2B,EAHC,EAGDA,KAAMC,EAHL,EAGKA,MAAOC,EAHZ,EAGYA,MAGR,KAATF,EANK,uBAOP,EAAKhB,SAAS,CACZwC,OAAQ,CAAExB,KAAM,sBARX,6BAaK,KAAVC,EAbK,uBAcP,EAAKjB,SAAS,CACZwC,OAAQ,CAAEvB,MAAO,uBAfZ,6BAoBK,KAAVC,EApBK,wBAqBP,EAAKlB,SAAS,CACZwC,OAAQ,CAAEtB,MAAO,uBAtBZ,kCAwCHgC,EAAgB,CACpBlC,OACAC,QACAC,SAGMvB,EAAO,EAAKY,MAAM4C,MAAMC,OAAxBzD,GA9CC,UAgDSM,IAAMoD,IAAN,qDAC8B1D,GAC9CuD,GAlDO,QAgDH/C,EAhDG,OAqDTJ,EAAS,CAAER,KAAM,iBAAkBK,QAASO,EAAIE,OAGhD,EAAKL,SAAS,CACZgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,KAGV,EAAKjC,MAAMwC,QAAQC,KAAK,KA/Df,4C,qPAhBDrD,EAAOS,KAAKG,MAAM4C,MAAMC,OAAxBzD,G,SACUM,IAAMC,IAAN,qDAC8BP,I,OAD1CQ,E,OAIAT,EAAUS,EAAIE,KAEpBD,KAAKJ,SAAS,CACZgB,KAAMtB,EAAQsB,KACdC,MAAOvB,EAAQuB,MACfC,MAAOxB,EAAQwB,Q,qIAwET,IAAD,SACgCd,KAAKf,MAApC2B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAOsB,EADrB,EACqBA,OAE5B,OACE,cAAC9B,EAAD,UACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,mCACE,sBAAKoB,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,0BACA,qBAAKA,UAAU,YAAf,SACE,uBAAMwB,SAAU,EAAKA,SAASlB,KAAK,EAAM1B,GAAzC,UACE,cAAC,EAAD,CACEkC,MAAM,OACNjB,KAAK,OACLkB,YAAY,gBACZ5B,MAAOU,EACPmB,SAAU,EAAKA,SACfC,MAAOI,EAAOxB,OAGhB,cAAC,EAAD,CACEiB,MAAM,QACNjB,KAAK,QACLzB,KAAK,QACL2C,YAAY,iBACZ5B,MAAOW,EACPkB,SAAU,EAAKA,SACfC,MAAOI,EAAOvB,QAGhB,cAAC,EAAD,CACEgB,MAAM,QACNjB,KAAK,QACLkB,YAAY,iBACZ5B,MAAOY,EACPiB,SAAU,EAAKA,SACfC,MAAOI,EAAOtB,QAGhB,uBACE3B,KAAK,SACLe,MAAM,iBACNa,UAAU,6C,GAvINV,aCMX6C,EAVD,SAAC/C,GACb,OACE,qCACE,oBAAIY,UAAU,YAAd,mCACA,mBAAGA,UAAU,OAAb,2CACA,qBAAKA,UAAU,iBAAf,+BCMSoC,EAXE,WACf,OACE,qCACE,qBAAIpC,UAAU,YAAd,UACE,sBAAMA,UAAU,cAAhB,kBADF,qBAGA,mBAAGA,UAAU,OAAb,iDCyCSqC,E,4MA9CbnE,MAAQ,CACNM,GAAI,GACJ8D,MAAO,I,kEAEY,IAAD,OAClBC,MAAM,gDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACtD,GAAD,OACJ,EAAKL,SAAS,CACZL,GAAIU,EAAKV,GACT8D,MAAOpD,EAAKoD,a,+BAyBV,IAAD,EACerD,KAAKf,MAAnBoE,EADD,EACCA,MAAO9D,EADR,EACQA,GACf,OACE,qCACE,4BAAIA,IACJ,6BAAK8D,W,GAzCMhD,aCoCJqD,E,uKAvBX,OACE,mCACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQhC,SAAS,oBAEjB,qBAAKX,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,IAAIC,UAAWrC,IACjC,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,eAAeC,UAAW1B,IAC5C,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,oBAAoBC,UAAWhB,IACjD,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,SAASC,UAAWX,IACtC,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,QAAQC,UAAWT,IACrC,cAAC,IAAD,CAAOS,UAAWV,oB,GAfhB9C,aCDHyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0259f313.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    // {\r\n    //   id: 1,\r\n    //   name: 'John Doe',\r\n    //   email: 'jdoe@gmail.ocm',\r\n    //   phone: '555-555-5555',\r\n    // },\r\n    // {\r\n    //   id: 2,\r\n    //   name: 'Karen Williams',\r\n    //   email: 'Williams@gmail.ocm',\r\n    //   phone: '222-222-2222',\r\n    // },\r\n    // {\r\n    //   id: 3,\r\n    //   name: 'Henry Johnson',\r\n    //   email: 'henry@gmail.ocm',\r\n    //   phone: '777-777-7777',\r\n    // },\r\n\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <>\r\n              <div className='card card-body mb-3'>\r\n                <h4>\r\n                  {name}{' '}\r\n                  <i\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showContactInfo: !this.state.showContactInfo,\r\n                      })\r\n                    }\r\n                    className='fas fa-sort-down'\r\n                    style={{ cursor: 'pointer' }}\r\n                  ></i>\r\n                  <i\r\n                    className='fas fa-times'\r\n                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  ></i>\r\n                  <Link to={`contact/edit/${id}`}>\r\n                    <i\r\n                      className='fas fa-pencil-alt'\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                        color: 'black',\r\n                        float: 'right',\r\n                        marginRight: '1rem',\r\n                      }}\r\n                    ></i>\r\n                  </Link>\r\n                </h4>\r\n                {showContactInfo ? (\r\n                  <ul className='list-group'>\r\n                    <li className='list-group-item'>Email : {email}</li>\r\n                    <li className='list-group-item'>Phone : {phone}</li>\r\n                  </ul>\r\n                ) : null}\r\n              </div>\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\n\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <>\r\n              <h1 className='display-4 mb-2'>\r\n                <span className='text-danger'>Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact contact={contact} key={contact.id} />\r\n              ))}\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = ({ branding }) => {\r\n  return (\r\n    <>\r\n      <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n        <div className='container'>\r\n          <Link to='/' className='navbar-brand'>\r\n            {branding}\r\n          </Link>\r\n          <div>\r\n            <ul className='navbar-nav mr-auto'>\r\n              <li className='nav-item'>\r\n                <Link to='/' className='nav-link'>\r\n                  <i className='fas fa-home'></i> Home\r\n                </Link>\r\n              </li>\r\n\r\n              <li className='nav-item'>\r\n                <Link to='/contact/add' className='nav-link'>\r\n                  <i className='fas fa-plus'></i> Add\r\n                </Link>\r\n              </li>\r\n\r\n              <li className='nav-item'>\r\n                <Link to='/about' className='nav-link'>\r\n                  <i className='fas fa-question'></i> About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App',\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className='form-group'>\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          className={classnames('form-control form-control-lg', {\r\n            'is-invalid': error,\r\n          })}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n\r\n        {error && <div className='invalid-feedback'>{error}</div>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <>\r\n              <div className='card mb-3'>\r\n                <div className='card-header'>Add Contact</div>\r\n                <div className='card-body'>\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label='Name'\r\n                      name='name'\r\n                      placeholder='Enter Name...'\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label='Email'\r\n                      name='email'\r\n                      type='email'\r\n                      placeholder='Enter Email...'\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label='Phone'\r\n                      name='phone'\r\n                      placeholder='Enter Phone...'\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n\r\n                    <input\r\n                      type='submit'\r\n                      value='Add Contact'\r\n                      className='btn btn-light btn-block'\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    // const newContact = {\r\n    //   name,\r\n    //   email,\r\n    //   phone,\r\n    // };\r\n\r\n    // const res = await axios.post(\r\n    //   'https://jsonplaceholder.typicode.com/users',\r\n    //   newContact\r\n    // );\r\n\r\n    // dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <>\r\n              <div className='card mb-3'>\r\n                <div className='card-header'>Edit Contact</div>\r\n                <div className='card-body'>\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label='Name'\r\n                      name='name'\r\n                      placeholder='Enter Name...'\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label='Email'\r\n                      name='email'\r\n                      type='email'\r\n                      placeholder='Enter Email...'\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label='Phone'\r\n                      name='phone'\r\n                      placeholder='Enter Phone...'\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n\r\n                    <input\r\n                      type='submit'\r\n                      value='Update Contact'\r\n                      className='btn btn-light btn-block'\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <>\r\n      <h1 className='display-4'>About Contact Manager</h1>\r\n      <p className='lead'>Simple app to manage contacts</p>\r\n      <div className='text-secondary'>Version 1.0.0</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <h1 className='display-4'>\r\n        <span className='text-danger'>404 </span> Page Not Found\r\n      </h1>\r\n      <p className='lead'>Sorry, that page does not exist</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    id: '',\r\n    title: '',\r\n  };\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        this.setState({\r\n          id: data.id,\r\n          title: data.title,\r\n        })\r\n      );\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log('componentWillMount');\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate');\r\n  // }\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log('componentWillUpdate');\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log('componentWillReceiveProps');\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate() {\r\n  //   console.log('getSnapshotBeforeUpdate');\r\n  // }\r\n\r\n  render() {\r\n    const { title, id } = this.state;\r\n    return (\r\n      <>\r\n        <p>{id}</p>\r\n        <h1>{title}</h1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport { Provider } from './context';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Provider>\n          <Router>\n            <Header branding='Contact Manager' />\n\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/test' component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}